## 简洁版
### JavaScript是单线程的，单线程就意味着同一时间只能干一件事。
### JS任务包含了同步任务和异步任务。
### 遇到同步任务会将其放入调用栈(先进后出)中，遇到异步任务会将其放入消息队列中
### 等主线程的任务执行完成以后，再回过头执行消息队列中的异步任务
### 如果异步任务中仍然有异步任务，会继续放入消息队列，以此类推，便形成了一个事件循环。
### 异步任务分为微任务和宏任务
### 当执行栈中的代码执行完毕，会在执行宏任务队列之前先看看微任务队列中有没有任务，如果有会先将微任务队列中的任务清空才会去执行宏任务队列
### 宏任务等待执行栈和微任务队列都执行完毕才会执行，并且在执行完每一个宏任务后，会去看看微任务队列有没有新添加的任务，如果有，会先将微任务队列中的任务清空，才会继续执行下一个宏任务

### 宏任务
- I/O
- setTimeout
- setInterval
- setImmediate
- requestAnimationFram

### 微任务
- process.nextTick
- MutationObserver
- Promise.then catch finally
- callback
- Object.observe